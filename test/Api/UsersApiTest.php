<?php
/**
 * UsersApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Zoom API
 *
 * API Description
 *
 * OpenAPI spec version: 2.0.0
 * Contact: developer@zoom.us
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.8
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * UsersApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UsersApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for user
     *
     * Retrieve a user.
     *
     */
    public function testUser()
    {
    }

    /**
     * Test case for userAssistantCreate
     *
     * Add assistants.
     *
     */
    public function testUserAssistantCreate()
    {
    }

    /**
     * Test case for userAssistantDelete
     *
     * Delete a user's assistant.
     *
     */
    public function testUserAssistantDelete()
    {
    }

    /**
     * Test case for userAssistants
     *
     * List a user's assistants.
     *
     */
    public function testUserAssistants()
    {
    }

    /**
     * Test case for userAssistantsDelete
     *
     * Delete a user's assistants.
     *
     */
    public function testUserAssistantsDelete()
    {
    }

    /**
     * Test case for userCreate
     *
     * Create a user.
     *
     */
    public function testUserCreate()
    {
    }

    /**
     * Test case for userDelete
     *
     * Delete a user.
     *
     */
    public function testUserDelete()
    {
    }

    /**
     * Test case for userEmail
     *
     * Check a user's email.
     *
     */
    public function testUserEmail()
    {
    }

    /**
     * Test case for userEmailUpdate
     *
     * Update a user's email.
     *
     */
    public function testUserEmailUpdate()
    {
    }

    /**
     * Test case for userPassword
     *
     * Update a user's password.
     *
     */
    public function testUserPassword()
    {
    }

    /**
     * Test case for userPermission
     *
     * Retrieve a user's permissions.
     *
     */
    public function testUserPermission()
    {
    }

    /**
     * Test case for userPicture
     *
     * Upload a user's picture.
     *
     */
    public function testUserPicture()
    {
    }

    /**
     * Test case for userSSOTokenDelete
     *
     * Revoke a user's SSO token.
     *
     */
    public function testUserSSOTokenDelete()
    {
    }

    /**
     * Test case for userSchedulerDelete
     *
     * Delete a user's scheduler.
     *
     */
    public function testUserSchedulerDelete()
    {
    }

    /**
     * Test case for userSchedulers
     *
     * List a user's schedulers.
     *
     */
    public function testUserSchedulers()
    {
    }

    /**
     * Test case for userSchedulersDelete
     *
     * Delete a user's schedulers.
     *
     */
    public function testUserSchedulersDelete()
    {
    }

    /**
     * Test case for userSettings
     *
     * Retrieve a user's settings.
     *
     */
    public function testUserSettings()
    {
    }

    /**
     * Test case for userSettingsUpdate
     *
     * Update a user's settings.
     *
     */
    public function testUserSettingsUpdate()
    {
    }

    /**
     * Test case for userStatus
     *
     * Update a user's status.
     *
     */
    public function testUserStatus()
    {
    }

    /**
     * Test case for userToken
     *
     * Retrieve a user's token.
     *
     */
    public function testUserToken()
    {
    }

    /**
     * Test case for userUpdate
     *
     * Update a user.
     *
     */
    public function testUserUpdate()
    {
    }

    /**
     * Test case for userVanityName
     *
     * Check a user's personal meeting room name.
     *
     */
    public function testUserVanityName()
    {
    }

    /**
     * Test case for userZPK
     *
     * Verify a user's zpk (Deprecated.
     *
     */
    public function testUserZPK()
    {
    }

    /**
     * Test case for users
     *
     * List Users.
     *
     */
    public function testUsers()
    {
    }
}
